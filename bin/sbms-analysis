#! /usr/bin/python

from matplotlib import use
use('agg')
import matplotlib.pyplot as plt
from sbms.engine import engine
import json
from sbms.marginals import marginals
from sbms.io_sbms import read_ini
import optparse
import numpy as np

def parse_command_line():
    parser = optparse.OptionParser()
    parser.add_option(
    "--output-file", "-o", help="output file", default='./out.txt',
        type=str, dest='output_file')
    params, args = parser.parse_args()
    return params

args = parse_command_line()
pl_evidences = []
for ii in range(100):
    engine('examples/use_real_data.ini', 'examples/recovery_power_law.ini', 'out/pl')
    marginals('out/pl', read_ini('examples/recovery_power_law.ini'))
    pl_evidence = json.load(open('out/pl' + 'stats.json'))['global evidence']
    pl_evidences.append(pl_evidence)

engine('examples/use_real_data.ini', 'noise', 'out/noise')
noise_evidence = json.load(open('out/noise' + 'stats.json'))['global evidence']
bayes_factors = np.array(pl_evidences) - noise_evidence
plt.figure()
plt.hist(bayes_factors, bins=10)
plt.savefig('out/bayesfactor_noise')
